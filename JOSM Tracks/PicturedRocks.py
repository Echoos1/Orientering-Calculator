#!/usr/bin/env python
# Generated by BigMap 2. Permalink: http://bigmap.osmz.ru/bigmap.php?xmin=16996&xmax=17119&ymin=23132&ymax=23207&zoom=16&scale=256&tiles=mapnik

import time
import datetime
import random
import io
import urllib.request
import re
from PIL import Image, ImageDraw
# ^^^^^^ install "python-pillow" package | pip install Pillow | easy_install Pillow

(zoom, xmin, ymin, xmax, ymax) = (16, 16996, 23132, 17119, 23207)
layers = ["https://tile.openstreetmap.org/!z/!x/!y.png"]
attribution = 'Map data (c) OpenStreetMap'
xsize = xmax - xmin + 1
ysize = ymax - ymin + 1
tilesize = 256

resultImage = Image.new("RGBA", (xsize * tilesize, ysize * tilesize), (0,0,0,0))
counter = 0
total = xsize * ysize
complete = 0
for x in range(xmin, xmax+1):
	for y in range(ymin, ymax+1):
		complete += 1
		for layer in layers:
			print("url = layer.replace", end="\r")
			url = layer.replace("!x", str(x)).replace("!y", 
                                             str(y)).replace("!z", str(zoom))
			print("math = re.search", end="\r")
			match = re.search("{([a-z0-9]+)}", url)
			print("if match...", end="\r")
			if match:
				print("url = url.replace", end="\r")
				url = url.replace(match.group(0), random.choice(match.group(1)))
			print(url, "... ", end="\r")
			try:
				print(url," Requesting...", end="\r")
				req = urllib.request.Request(url, headers={'User-Agent': 'BigMap/2.0'})
				print(url," Reading...", end="\r")
				tile = urllib.request.urlopen(req).read()
			except Exception as e:
				print("Error", e)
				continue
			print(url," Opening...", end="\r")
			image = Image.open(io.BytesIO(tile))
			print(url," Pasting...", end="\r")
			resultImage.paste(image, ((x-xmin)*tilesize, 
                             (y-ymin)*tilesize), 
                     image.convert("RGBA"))
			counter += 1
			if counter == 10:
				print(url," Waiting 2...", end="\r")
				time.sleep(2)
				counter = 0
			print(f'{url} Done! {((complete/total)*100):.02f}% Complete...         ')

print("Drawing Image...")
draw = ImageDraw.Draw(resultImage)
draw.text((5, ysize*tilesize-15), attribution, (0,0,0))
del draw

now = datetime.datetime.now()
outputFileName = "map%02d-%02d%02d%02d-%02d%02d.png" % (zoom, 
                                                        now.year % 100, 
                                                        now.month, 
                                                        now.day, 
                                                        now.hour, 
                                                        now.minute)
print("Saving Image...")
resultImage.save(outputFileName)
input("Done! [Press ENTER to exit] ")
